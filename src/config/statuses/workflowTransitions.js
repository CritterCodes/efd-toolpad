/**
 * Workflow Transitions Configuration
 * Defines allowed status transitions and workflow logic
 */

import { INTERNAL_STATUSES } from './internalStatuses.js';

export const WORKFLOW_TRANSITIONS = {
  [INTERNAL_STATUSES.PENDING]: [
    INTERNAL_STATUSES.REVIEWING_REQUEST,
    INTERNAL_STATUSES.CLIENT_CONSULTATION,
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.REVIEWING_REQUEST]: [
    INTERNAL_STATUSES.CLIENT_CONSULTATION,
    INTERNAL_STATUSES.PREPARING_QUOTE,
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.CLIENT_CONSULTATION]: [
    INTERNAL_STATUSES.SKETCHING,
    INTERNAL_STATUSES.PREPARING_QUOTE,
    INTERNAL_STATUSES.ON_HOLD,
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.SKETCHING]: [
    INTERNAL_STATUSES.SKETCH_REVIEW,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.SKETCH_REVIEW]: [
    INTERNAL_STATUSES.SKETCH_APPROVED,
    INTERNAL_STATUSES.SKETCHING, // Back to sketching for revisions
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.SKETCH_APPROVED]: [
    INTERNAL_STATUSES.GENERATING_IMAGE,
    INTERNAL_STATUSES.PREPARING_QUOTE
  ],
  
  [INTERNAL_STATUSES.GENERATING_IMAGE]: [
    INTERNAL_STATUSES.IMAGE_REVIEW,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.IMAGE_REVIEW]: [
    INTERNAL_STATUSES.IMAGE_APPROVED,
    INTERNAL_STATUSES.GENERATING_IMAGE, // Back for revisions
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.IMAGE_APPROVED]: [
    INTERNAL_STATUSES.IN_CAD,
    INTERNAL_STATUSES.PREPARING_QUOTE
  ],
  
  [INTERNAL_STATUSES.IN_CAD]: [
    INTERNAL_STATUSES.CAD_REVIEW,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.CAD_REVIEW]: [
    INTERNAL_STATUSES.CAD_APPROVED,
    INTERNAL_STATUSES.CAD_REVISION,
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.CAD_REVISION]: [
    INTERNAL_STATUSES.CAD_REVIEW,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.CAD_APPROVED]: [
    INTERNAL_STATUSES.PREPARING_QUOTE,
    INTERNAL_STATUSES.QUOTE_SENT
  ],
  
  [INTERNAL_STATUSES.PREPARING_QUOTE]: [
    INTERNAL_STATUSES.QUOTE_SENT,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.QUOTE_SENT]: [
    INTERNAL_STATUSES.QUOTE_APPROVED,
    INTERNAL_STATUSES.PREPARING_QUOTE, // Back for quote revision
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.QUOTE_APPROVED]: [
    INTERNAL_STATUSES.DEPOSIT_INVOICE_SENT,
    INTERNAL_STATUSES.DEPOSIT_RECEIVED // Direct payment
  ],
  
  [INTERNAL_STATUSES.DEPOSIT_INVOICE_SENT]: [
    INTERNAL_STATUSES.DEPOSIT_RECEIVED,
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.DEPOSIT_RECEIVED]: [
    INTERNAL_STATUSES.ORDERING_PARTS,
    INTERNAL_STATUSES.PARTS_RECEIVED, // If parts already available
    INTERNAL_STATUSES.IN_PRODUCTION // If ready to start immediately
  ],
  
  [INTERNAL_STATUSES.ORDERING_PARTS]: [
    INTERNAL_STATUSES.PARTS_ORDERED,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.PARTS_ORDERED]: [
    INTERNAL_STATUSES.PARTS_RECEIVED,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.PARTS_RECEIVED]: [
    INTERNAL_STATUSES.IN_PRODUCTION
  ],
  
  [INTERNAL_STATUSES.IN_PRODUCTION]: [
    INTERNAL_STATUSES.CASTING,
    INTERNAL_STATUSES.SETTING_STONES,
    INTERNAL_STATUSES.FINISHING,
    INTERNAL_STATUSES.QUALITY_CONTROL,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.CASTING]: [
    INTERNAL_STATUSES.SETTING_STONES,
    INTERNAL_STATUSES.FINISHING,
    INTERNAL_STATUSES.QUALITY_CONTROL,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.SETTING_STONES]: [
    INTERNAL_STATUSES.FINISHING,
    INTERNAL_STATUSES.QUALITY_CONTROL,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.FINISHING]: [
    INTERNAL_STATUSES.QUALITY_CONTROL,
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.QUALITY_CONTROL]: [
    INTERNAL_STATUSES.FINAL_INVOICE_SENT,
    INTERNAL_STATUSES.FINAL_PAYMENT_RECEIVED, // Direct payment
    INTERNAL_STATUSES.READY_FOR_PICKUP, // Pre-paid
    INTERNAL_STATUSES.FINISHING, // Back for rework
    INTERNAL_STATUSES.ON_HOLD
  ],
  
  [INTERNAL_STATUSES.FINAL_INVOICE_SENT]: [
    INTERNAL_STATUSES.FINAL_PAYMENT_RECEIVED,
    INTERNAL_STATUSES.CANCELLED,
    INTERNAL_STATUSES.DEAD_LEAD
  ],
  
  [INTERNAL_STATUSES.FINAL_PAYMENT_RECEIVED]: [
    INTERNAL_STATUSES.READY_FOR_PICKUP,
    INTERNAL_STATUSES.SHIPPED
  ],
  
  [INTERNAL_STATUSES.READY_FOR_PICKUP]: [
    INTERNAL_STATUSES.SHIPPED,
    INTERNAL_STATUSES.COMPLETED
  ],
  
  [INTERNAL_STATUSES.SHIPPED]: [
    INTERNAL_STATUSES.COMPLETED
  ],
  
  // Special states can usually go anywhere
  [INTERNAL_STATUSES.ON_HOLD]: [
    INTERNAL_STATUSES.PENDING,
    INTERNAL_STATUSES.REVIEWING_REQUEST,
    INTERNAL_STATUSES.CLIENT_CONSULTATION,
    INTERNAL_STATUSES.SKETCHING,
    INTERNAL_STATUSES.GENERATING_IMAGE,
    INTERNAL_STATUSES.IN_CAD,
    INTERNAL_STATUSES.CAD_REVISION,
    INTERNAL_STATUSES.PREPARING_QUOTE,
    INTERNAL_STATUSES.ORDERING_PARTS,
    INTERNAL_STATUSES.IN_PRODUCTION,
    INTERNAL_STATUSES.CASTING,
    INTERNAL_STATUSES.SETTING_STONES,
    INTERNAL_STATUSES.FINISHING,
    INTERNAL_STATUSES.QUALITY_CONTROL,
    INTERNAL_STATUSES.CANCELLED
  ]
};

// Helper function to get next possible statuses
export const getNextPossibleStatuses = (currentStatus) => {
  return WORKFLOW_TRANSITIONS[currentStatus] || [];
};

// Helper function to check if transition is valid
export const isValidTransition = (fromStatus, toStatus) => {
  const allowedTransitions = WORKFLOW_TRANSITIONS[fromStatus] || [];
  return allowedTransitions.includes(toStatus);
};

// Backwards compatibility alias
export const isStatusTransitionAllowed = isValidTransition;

export default WORKFLOW_TRANSITIONS;
/**
 * Debug Task Pricing Key Mismatch
 */

function generateMetalKey(metalType, karat) {
  if (!metalType || !karat) {
    return null;
  }

  // Normalize inputs
  const normalizedKarat = karat.toUpperCase().replace(/[^0-9K]/g, '');
  
  // Metal type mapping - updated to handle both formats
  const metalTypeMap = {
    'yellow-gold': 'Yellow Gold',
    'white-gold': 'White Gold', 
    'rose-gold': 'Rose Gold',
    'sterling-silver': 'Sterling Silver',
    'silver': 'Sterling Silver',
    'platinum': 'Platinum',
    'palladium': 'Palladium'
  };

  const mappedMetalType = metalTypeMap[metalType.toLowerCase()] || metalType;
  
  let metalKey;
  
  // Handle sterling silver special case
  if (metalType.toLowerCase().includes('silver')) {
    metalKey = `${mappedMetalType} ${normalizedKarat}`;
  } else {
    // Handle gold and other metals
    metalKey = `${mappedMetalType} ${normalizedKarat}`;
  }

  return metalKey;
}

// Test data from actual task
const taskUniversalPricing = {
  "sterling_silver_925": {
    "metalLabel": "Sterling Silver 925",
    "metalType": "sterling_silver",
    "karat": "925",
    "totalLaborHours": 0.24,
    "totalProcessCost": 12.27,
    "totalMaterialCost": 0,
    "baseCost": 12.27,
    "retailPrice": 24.55
  },
  "yellow_gold_10k": {
    "metalLabel": "Yellow Gold 10K",
    "metalType": "yellow_gold",
    "karat": "10k",
    "retailPrice": 30.00
  }
};

console.log('🔍 Task Pricing Key Mismatch Debug');
console.log('===================================');
console.log('');

console.log('Available keys in task universalPricing:');
Object.keys(taskUniversalPricing).forEach(key => {
  console.log(`  "${key}"`);
});
console.log('');

console.log('Keys generated by generateMetalKey():');
const testCases = [
  { metalType: 'silver', karat: '925' },
  { metalType: 'sterling-silver', karat: '925' },
  { metalType: 'yellow-gold', karat: '10k' },
  { metalType: 'yellow-gold', karat: '10K' }
];

testCases.forEach(test => {
  const generatedKey = generateMetalKey(test.metalType, test.karat);
  const hasMatch = taskUniversalPricing.hasOwnProperty(generatedKey);
  console.log(`  ${test.metalType} + ${test.karat} → "${generatedKey}" (match: ${hasMatch ? 'YES' : 'NO'})`);
});
console.log('');

console.log('🚨 ISSUE IDENTIFIED:');
console.log('---------------------');
console.log('✗ Task data uses underscore format: "sterling_silver_925", "yellow_gold_10k"');
console.log('✗ generateMetalKey() produces space format: "Sterling Silver 925", "Yellow Gold 10K"');
console.log('');
console.log('💡 SOLUTION:');
console.log('-------------');
console.log('Need to modify generateMetalKey() to match task data format OR');
console.log('Add fallback logic to check both formats');
